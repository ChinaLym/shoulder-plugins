kind: pipeline
name: default

steps:
- name: MVN Compile、Package、Publish To MVN Repository.
  image: cnlym/maven:3-jdk-21-alpine-aliyun
  # 加速，对于这种稳定的容器
  pull: if-not-exists
  commands:
#  - gpg --import priv.key.lym
#  - /root/drone_ding_notify_curl.sh
  - cd plugins/errcode-maven-plugin
# 只构建
#  - mvn install -P release -Dmaven.test.skip=true -V
# 发布: version, tag, release
# Active mvn package plugins for higher quality jar files. change Version To release
  - sed -i 's#<phase>deploy</phase><!-- ACTIVE_WITH_verify -->#<phase>verify</phase><!-- ACTIVE_WITH_verify -->#g' pom.xml
  - sed -i 's#<phase>deploy</phase><!-- ACTIVE_WITH_package -->#<phase>package</phase><!-- ACTIVE_WITH_package -->#g' pom.xml
  - sed -i 's#-SNAPSHOT</version>#</version>#g' pom.xml
  - git tag -a v1.2.2 -m "${DRONE_COMMIT_MESSAGE}" & git push origin --tags
  - mvn deploy -P release -Dmaven.test.skip=true -V
  - echo 'FINISHED deploy!'

- name: Build Notification. --- with DingTalk
  image: guoxudongdocker/drone-dingtalk
  settings:
    token:
      from_secret: ding_token
    type: markdown

trigger:
  branch:
  - master    
  event:
  - push
